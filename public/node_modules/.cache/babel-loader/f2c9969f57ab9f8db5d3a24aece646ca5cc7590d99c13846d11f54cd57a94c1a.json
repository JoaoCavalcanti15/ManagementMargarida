{"ast":null,"code":"var _jsxFileName = \"/Users/joao/Desktop/ManagementMargarida/public/src/pages/dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport '../styles.css'; // Import common styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [inflatables, setInflatables] = useState([]);\n  useEffect(() => {\n    const fetchInflatables = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/inflatables`);\n        setInflatables(response.data);\n      } catch (error) {\n        console.error('Error fetching inflatables:', error);\n      }\n    };\n    fetchInflatables();\n  }, []);\n  const handleChangeState = async inflatableId => {\n    try {\n      console.log('Changing state for inflatableId:', inflatableId);\n      const response = await axios.patch(`${process.env.REACT_APP_BACKEND_URL}/inflatable/${inflatableId}/change-state`);\n      console.log('Response from server:', response.data);\n\n      // Update local state with the updated inflatable\n      const updatedInflatable = response.data;\n      setInflatables(inflatables.map(inflatable => {\n        if (inflatable._id === updatedInflatable._id) {\n          return {\n            ...inflatable,\n            state: updatedInflatable.state\n          };\n        }\n        return inflatable;\n      }));\n    } catch (error) {\n      console.error('Error changing state:', error);\n    }\n  };\n  const goToLogin = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Inflatables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: goToLogin,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: inflatables.map(inflatable => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: inflatable.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }, this), \" \", inflatable.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => handleChangeState(inflatable._id),\n          children: \"Change State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, inflatable._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"yvijdUbLQPHOAGzdU5hEQmRkoxs=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","inflatables","setInflatables","fetchInflatables","response","get","process","env","REACT_APP_BACKEND_URL","data","error","console","handleChangeState","inflatableId","log","patch","updatedInflatable","map","inflatable","_id","state","goToLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","_c","$RefreshReg$"],"sources":["/Users/joao/Desktop/ManagementMargarida/public/src/pages/dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport '../styles.css'; // Import common styles\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const [inflatables, setInflatables] = useState([]);\n\n  useEffect(() => {\n    const fetchInflatables = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/inflatables`);\n        setInflatables(response.data);\n      } catch (error) {\n        console.error('Error fetching inflatables:', error);\n      }\n    };\n\n    fetchInflatables();\n  }, []);\n\n  const handleChangeState = async (inflatableId) => {\n    try {\n      console.log('Changing state for inflatableId:', inflatableId);\n      const response = await axios.patch(`${process.env.REACT_APP_BACKEND_URL}/inflatable/${inflatableId}/change-state`);\n      console.log('Response from server:', response.data);\n  \n      // Update local state with the updated inflatable\n      const updatedInflatable = response.data;\n      setInflatables(inflatables.map(inflatable => {\n        if (inflatable._id === updatedInflatable._id) {\n          return { ...inflatable, state: updatedInflatable.state };\n        }\n        return inflatable;\n      }));\n    } catch (error) {\n      console.error('Error changing state:', error);\n    }\n  };\n\n  const goToLogin = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Inflatables</h2>\n        <button className=\"button\" onClick={goToLogin}>\n          Log Out\n        </button>\n      </div>\n      <ul className=\"list\">\n        {inflatables.map((inflatable) => (\n          <li key={inflatable._id} className=\"list-item\">\n            <h3>{inflatable.name}</h3>\n            <p><strong>State:</strong> {inflatable.state}</p>\n            <button className=\"button\" onClick={() => handleChangeState(inflatable._id)}>Change State</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}